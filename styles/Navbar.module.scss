@use "./modules/mixins";
@use "./modules/globalVariables" as gvar;

$zIndexTop: 100; // zIndex

// Nav Menu Div
.navbarDiv {
	$hDivLinksPadding: 20px;
	position: fixed;
	transition: transform 0.3s, background gvar.$colorTransitionTime;

	// Use RGBA once get primary color
	background: var(--color-background);
	width: 100%;
	height: 80px;
	padding: $hDivLinksPadding $hDivLinksPadding;

	display: flex;
	justify-content: space-between;
	align-items: center;
}
.navbarDiv_Close {
	@extend .navbarDiv;
	transform: translateY(-120px);
}
.hNavbarEndContent {
	display: flex;
	justify-content: flex-end;
	align-items: flex-end;
}
// Icons Div
$iconMarginSize: 7px; // Margin for Navbar Icons
.iconsDiv {
	display: flex;
	justify-content: center;
	align-items: center;
	position: relative;
	margin-right: 40px;
}
// Color Icon Div
.colorModeIconDiv {
	transform: scale(1.7);
	cursor: pointer;
}
// Mobile Menu Icon Div
.mobileMenuIconDiv {
	z-index: $zIndexTop; // MobileMenuIcon should be at very top
	display: none;
	transform: scale(2);

	@include mixins.maxMediaQuery(sm) {
		display: block;
	}
}
// Icon themselves
.commonIconProperties {
	fill: var(--color-text-primary);
	position: absolute;
}
.colorModeIcon {
	@extend .commonIconProperties;
	$iconSwitchTime: 0.3s;
	transition: opacity $iconSwitchTime, transform #{$iconSwitchTime + 0.2s}, fill gvar.$colorTransitionTime;
	bottom: 0;

	@include mixins.maxMediaQuery(sm) {
		bottom: #{-$iconMarginSize - 2px};
		right: #{$iconMarginSize - 2px};
	}
}
.mobileMenuIcon {
	@extend .commonIconProperties;
	$iconSwitchTime: 0.3s;
	transition: opacity $iconSwitchTime, transform $iconSwitchTime, fill gvar.$colorTransitionTime;

	left: $iconMarginSize;
	top: -$iconMarginSize;
}
// Animations
.colorModeIcon_Fade {
	@extend .colorModeIcon;

	opacity: 0;
	transform: rotate(180deg);
}
.mobileMenuIcon_Fade {
	@extend .colorModeIcon_Fade;
	@extend .mobileMenuIcon;
}
// Horizontial Links
.hLinksParent {
	list-style: none;
	display: flex;
	justify-content: flex-end;

	@include mixins.maxMediaQuery(sm) {
		display: none;
	}
}
.hLinkItem {
	color: var(--color-primary);
	font-size: 1.5rem;
	font-weight: 500;
	padding: 0px 10px;
	cursor: pointer;

	transition: color gvar.$colorTransitionTime, transform gvar.$colorTransitionTime;

	&:hover {
		color: var(--color-primary-light);
		transform: scale(1.1);
	}
}

/*************************************
*	To close the Mobile Menu,
* 	mobileMenuDiv.visibility : hidden, If not will still register inputs as not all children are hidden
*								also closes the menu if if user changes to landscape mode..
* 	vLinksParent.width : 0%, Hide text and growing animation
*	vLinksParent.opacity : 0%
*
**************************************/
$mobileMenuCloseTime: 0.3s;
// Mobile Menu Div
.mobileMenuDiv {
	position: fixed;
	right: 0;
	top: 0;
	bottom: 0;
	visibility: hidden;
	transition: visibility $mobileMenuCloseTime;

	@include mixins.maxMediaQuery(sm) {
		visibility: visible;

		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		align-items: flex-end;
	}
}
.mobileMenuDiv_Close {
	@extend .mobileMenuDiv;

	visibility: hidden;
}
// Vertical Links
.vLinksParent {
	z-index: #{$zIndexTop - 1};
	width: 0%;
	height: 100%;
	opacity: 0;
	background: rgb(72, 17, 17);
	transition: width $mobileMenuCloseTime, opacity $mobileMenuCloseTime;

	list-style: none;
	display: flex;
	flex-direction: column;
	justify-content: space-evenly;
	align-items: center;

	@include mixins.maxMediaQuery(sm) {
		width: 60vw;
		opacity: 1;
	}
}
.vLinksParent_Close {
	@extend .vLinksParent;

	width: 0%;
	opacity: 0;
}
.vLinkItem {
	@extend .hLinkItem;
	text-align: center;
	font-size: 2rem;
}
// Mobile Menu Background
.mobileMenuBackground {
	z-index: #{$zIndexTop - 2};
	position: fixed;
	opacity: 0;
	width: 100%;
	height: 100%;
	transition: opacity $mobileMenuCloseTime;
	background: black;
	// Blur Effect
	$blurStrength: 100px;
	filter: blur($blurStrength);
	-webkit-filter: blur($blurStrength);

	@include mixins.maxMediaQuery(sm) {
		opacity: 0.5;
	}
}
.mobileMenuBackground_Close {
	@extend .mobileMenuBackground;

	opacity: 0;
}
