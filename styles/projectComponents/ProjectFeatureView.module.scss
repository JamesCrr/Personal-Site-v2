@use "../modules/globalVariables" as gvar;
@use "../modules/mixins" as mx;

.featuredDiv {
	display: flex;
	flex-direction: var(--ownFlexDirection); // Specified in JS
	justify-content: space-between;
	align-items: center;

	width: 100%;
	height: 300px;

	margin-bottom: 100px;

	@include mx.maxMediaQuery(md) {
		flex-direction: column;
		height: auto;
		margin-bottom: 80px;
	}
	@include mx.maxMediaQuery(xs) {
		margin-bottom: 50px;
	}
}
// Text Related Div
.txtDetailsDiv {
	width: 60%;
	height: 100%;
	text-align: left;
	padding: 0px 40px;

	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	// align-items: center;

	@include mx.maxMediaQuery(md) {
		width: 100%;
		margin-top: 20px;
	}
	@include mx.maxMediaQuery(sm) {
		padding: 0px 10px;
	}
	@include mx.maxMediaQuery(xs) {
		padding: 0;
	}
}
// Title Div
.titleDiv {
	align-self: flex-start;

	width: 100%;
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-wrap: wrap;
}
// Title Text
.titleTxt {
	transition: color gvar.$colorTransitionTime;
	color: var(--color-text-primary);

	font-size: 2.5rem;
	font-weight: 500;
	margin-right: 20px;

	@include mx.maxMediaQuery(md) {
	}
	@include mx.maxMediaQuery(sm) {
		font-size: 2rem;
	}
}
// Links Div
.linksDiv {
	padding-top: 10px;

	display: flex;
	justify-content: flex-start;
	align-items: center;

	// Icon
	$baseIconScale: 1.4;
	& div a svg {
		transition: fill gvar.$colorTransitionTime, transform gvar.$colorTransitionTime;
		transform: scale($baseIconScale);
		fill: var(--color-secondary);

		margin: 0px 20px 0px 0px;
		cursor: pointer;

		&:hover {
			transform: scale($baseIconScale + 0.4);
			fill: var(--color-secondary-light);
		}
	}

	@include mx.maxMediaQuery(sm) {
		& div a svg {
			transform: scale(#{$baseIconScale - 0.2});
		}
	}
}
.linkIconDiv {
}
// Description
.descriptionTxt {
	transition: color gvar.$colorTransitionTime;
	color: var(--color-text-primary-lesser);

	font-size: 1.5rem;
	font-weight: 400;

	margin: 20px 0px 10px 0px;

	@include mx.maxMediaQuery(lg) {
	}
	@include mx.maxMediaQuery(md) {
		font-size: 1.4rem;
	}
	@include mx.maxMediaQuery(sm) {
		font-size: 1.2rem;
	}
	@include mx.maxMediaQuery(xs) {
		font-size: 1rem;
	}
}
// Built With Div
.bwDiv {
	width: 100%;
	border-top: 3px solid var(--color-secondary);
	padding-top: 10px;
}
.bwTxt {
	transition: color gvar.$colorTransitionTime;
	color: var(--color-text-primary);

	$baseFontSize: 1.2rem;
	font-size: $baseFontSize;
	font-style: italic;

	@include mx.maxMediaQuery(md) {
		font-size: #{$baseFontSize - 0.1};
	}
	@include mx.maxMediaQuery(sm) {
		font-size: #{$baseFontSize - 0.2};
	}
	@include mx.maxMediaQuery(xs) {
		font-size: #{$baseFontSize - 0.3};
	}
}
// Tags List Div
.tagsListDiv {
	width: 100%;

	display: flex;
	flex-wrap: wrap;
	justify-content: flex-start;
	align-items: center;

	@include mx.maxMediaQuery(md) {
	}
	@include mx.maxMediaQuery(sm) {
		padding: 0px 5px;
	}
	@include mx.maxMediaQuery(xs) {
		padding: 0px;
	}
}
// Tag Div
.tagDiv {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	margin: 20px 20px 15px 0px;

	@include mx.maxMediaQuery(md) {
	}
	@include mx.maxMediaQuery(xs) {
		margin-right: 10px;
	}
}
.tagIconImgDiv {
	transform: scale(3.5);
	// Icon Image
	& > svg {
		transition: fill gvar.$colorTransitionTime;
		fill: var(--color-text-primary-lesser);
	}
	&:hover {
		// Icon Image
		& > svg {
			fill: var(--color-primary);
		}
		// <p> sibling
		& + p {
			opacity: 1;
		}
	}

	@include mx.maxMediaQuery(md) {
		transform: scale(3);
	}
	@include mx.maxMediaQuery(sm) {
		transform: scale(2.8);
	}
	@include mx.maxMediaQuery(xs) {
		transform: scale(2.4);
	}
}
.tagIconTxt {
	transition: color gvar.$colorTransitionTime, opacity 0.3s;
	color: var(--color-text-primary);

	opacity: var(--opacity-tagText);
	margin-top: 5px;
	font-size: 0.9rem;

	@include mx.maxMediaQuery(md) {
		margin-top: 0px;
	}
	@include mx.maxMediaQuery(sm) {
		font-size: 0.8rem;
	}
	@include mx.maxMediaQuery(xs) {
	}
}

// Image Div
.imageDiv {
	width: 400px;
	height: 100%;
	position: relative;

	// Image
	& > span > img {
		object-fit: contain;
		// transition: transform 0.6s;
	}

	// &:hover {
	// 	& > span > img {
	// 		transform: scale(1.5);
	// 	}
	// }

	@include mx.maxMediaQuery(md) {
		width: 100%;
		height: 300px;
		margin-top: 20px;
	}
	@include mx.maxMediaQuery(sm) {
		// Width is so small that maintaining 16:9 aspect ratio is gonna make image TINY
		// Switch to other than contain
		& > span > img {
			object-fit: cover !important;
		}
	}
	@include mx.maxMediaQueryPX(400px) {
	}
	@include mx.maxMediaQuery(xs) {
	}

	// // If want to completely style ownself
	// // Disables absolute positions..
	// & > span {
	// 	position: inherit !important;
	// 	// bottom: null;
	// 	// top: null;
	// 	// right: null;
	// 	// left: null;

	// 	& > img {
	// 		position: inherit !important;
	// 		width: inherit !important;
	// 		height: inherit !important;
	// 	}
	// }
}
